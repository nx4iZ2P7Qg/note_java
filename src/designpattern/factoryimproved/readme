简单工厂最大的优点在于工厂类中包含了必要的逻辑判断
根据客户端的选择条件动态实例化相关的类，去除了与具体产品的依赖。

但是简单工厂设计模式存在如下缺点：
1，我们每次想要增加一种新产品的时候，都必须修改SimpleFactory的原代码。比如上述例子中，假如该公司又可以生产CPU了，我们只能在SimpleFactory的源代
码中加判断和生产CPU的代码。这样一来，我们不但对扩展开放了，对修改也开放了，这严重违背了“开放-封闭原则”。
2，当我们拥有很多很多产品的时候，而且产品之间又存在复杂的层次关系的时候，这个类必须拥有复杂的逻辑判断能力，其代码量也将不断地激增，这非常不利于以后的
维护。
3，我们不难发现，整个系统都严重依赖SimpleFactory类，只要SimpleFactory类一出问题，系统就进入不能工作的状态。


改进后
工厂方法和简单工厂的主要区别
简单工厂把创建产品的职能都放在一个类里面
工厂方法把不同的产品放在实现了工厂接口的不同工厂类里面
这样就算其中一个工厂类出了问题，其他工厂类也能正常工作，互相不受影响，以后增加新产品，也只需要新增一个实现工厂接口工厂类，不用修改已有的代码。