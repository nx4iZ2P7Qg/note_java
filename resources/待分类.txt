        // 4.3.6
        // 类设计中不要返回引用可变对象的访问器方法，比如public String getName()
        // 这样可以通过赋值的方法改变name，破坏了封装
        // 如果一定要返回，最好返回引用的克隆return name.clone()

        // 4.3.9
        // 如果一个类的方法不改变任何成员，就是一个不可变类

        // 4.4.3
        // 静态方法没有this隐藏参数

        // 4.6.1
        // 重载中，方法签名不包含返回类型，不能存在两个签名相同的方法

        // 4.6.6
        // 如果构造器第一行语句形如this(...)，表示调用另外一个构造器

        // 4.6.7
        // 只要构造类的对象，初始化块就会被执行，并且在构造器之前执行
        // 这种机制不常用
        // 如果一定要用，建议将初始化块放在域定义后，防止循环定义
        // 调用构造器的细节
        // 1.所有数据域被初始化为默认值
        // 2.按照在类声明中出现的顺序，依次执行所有域初始化语句及初始化块
        // 3.如果构造器第一行调用了另外构造器，执行
        // 4.执行本本构造器剩下语句
        // 在类第一次加载时，进行静态域的初始化，所有静态初始化语句与静态初始化块都将依照定义的顺序执行

        // 类可以使用同包的所有类，及其他包中的公有类

        // 4.8 完全不知道在说什么

        // 4.9 文档注释


        // 泛型
        // ?     不确定的java类型
        // T     java类型
        // K V   Key Value
        // E     Element