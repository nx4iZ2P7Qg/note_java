参考：https://javarevisited.blogspot.sg/2011/06/volatile-keyword-java-example-tutorial.html

此关键字告诉JAVA编译器和线程，不要缓存此值，问题从主内存中读取,所以，如果在分享变量时，读/存是原子性的，那么你可以定义变量为volatile
JAVA5中除了自动装箱，枚举，范型，可变参数，还有一些内存模型的变化，叫做"happens-before"，这个变化保证了线程的变动可以被其他线程看到，解决了以前线程"leak through"的问题
此关键字只适用于变量，保证了在读取变量前，任何的变动都会写入(happens-before)， By the way use of volatile keyword also prevents compiler or JVM from the reordering of code or moving away them from synchronization barrier.
什么时候使用此关键字
    希望long, double保证原子性时
    同步工具，比如可见性
    不希望编译工作re-order代码时
需要注意的问题
    从java5开始，对volatile变量的变更会被其他线程看见。同时也意味着线程能看到别的变更。
    访问volatile变量不会被锁阻挡，因为只是简单的读写，不像同步块
    此关键字不意味着原子性，比如说++操作，为此仍然需要同步方法或块
    如果变量不在线程中共享，不需要此关键字
与同步的不同
    volatile不是synchronized的替代，只是在特定的情况下可以作为备选方案
    区别：
        1.volatile只修辞变量
        2.synchronized会操作锁
        3.volatile只同步线程内存与主内存的一个变量，synchronized同步线程与主内存所有变量
        4.volatile变量可以为空
        5.从java5开始，写入volatile变量与memory release效果相同，读取与memory acquire效果相同